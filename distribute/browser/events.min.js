(function (global, factory) {
  typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() :
  typeof define === 'function' && define.amd ? define(factory) :
  (global = global || self, global.Events = factory());
}(this, (function () { 'use strict';

  class Events{constructor(){}get _events(){return this.events=this.events||{},this.events}getEventCallbacks(a){return this._events[a]||{}}getEventCallbackName(a){return a.name.length?a.name:"anonymousFunction"}getEventCallbackGroup(a,b){return a[b]||[]}on(a,b){var c=this.getEventCallbacks(a),d=this.getEventCallbackName(b),e=this.getEventCallbackGroup(c,d);return e.push(b),c[d]=e,this._events[a]=c,this}off(){switch(arguments.length){case 0:delete this.events;break;case 1:var a=arguments[0];delete this._events[a];break;case 2:var a=arguments[0],b=arguments[1],c="string"==typeof b?b:this.getEventCallbackName(b);this._events[a]&&(delete this._events[a][c],0===Object.keys(this._events[a]).length&&delete this._events[a]);}return this}emit(){var a=Array.from(arguments),b=a.splice(0,1)[0],c=a.splice(0,1)[0],d=a.splice(0);return Object.entries(this.getEventCallbacks(b)).forEach((a)=>{var[e,f]=a;f.forEach(a=>{a({name:b,data:c},...d);});}),this}}

  return Events;

})));
