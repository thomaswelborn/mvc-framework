"use strict";var MVC=MVC||{};MVC.Utils={},MVC.Utils.bindEventsToTargetViewObjects=function(){this.toggleEventsForTargetViewObjects("on",...arguments)},MVC.Utils.unbindEventsFromTargetViewObjects=function(){this.toggleEventsForTargetViewObjects("off",...arguments)},MVC.Utils.bindEventsToTargetObjects=function(){this.toggleEventsForTargetObjects("on",...arguments)},MVC.Utils.unbindEventsFromTargetObjects=function(){this.toggleEventsForTargetObjects("off",...arguments)},MVC.Utils.isArray=function(e){return Array.isArray(e)},MVC.Utils.isObject=function(e){return!Array.isArray(e)&&null!==e&&"object"==typeof e},MVC.Utils.typeOf=function(e){return"object"==typeof valueA?MVC.Utils.isObject(valueA)?"object":MVC.Utils.isArray(valueA)?"array":null===valueA?"null":void 0:typeof e},MVC.Utils.isHTMLElement=function(e){return e instanceof HTMLElement},MVC.Utils.UID=function(){var e,t="";for(e=0;e<32;e+=1)switch(e){case 8:case 20:t+="-",t+=(16*Math.random()|0).toString(16);break;case 12:t+="-",t+="4";break;case 16:t+="-",t+=(4*Math.random()|8).toString(16);break;default:t+=(16*Math.random()|0).toString(16)}return t},MVC.Utils.typeOf=function(e){switch(typeof e){case"object":return MVC.Utils.isArray(e)?"array":MVC.Utils.isObject(e)?"object":null===e?"null":void 0;case"string":case"number":case"boolean":case"undefined":case"function":return typeof e}},MVC.Utils.addPropertiesToObject=function(){var e;switch(arguments.length){case 2:var t=arguments[0];e=arguments[1],Object.entries(t).forEach(t=>{var[s,i]=t;e[s]=i});break;case 3:var s=arguments[0],i=arguments[1];(e=arguments[2])[s]=i}return e},MVC.Utils.objectQuery=function(e,t){var s=MVC.Utils.objectQuery.parseNotation(e);return"@"===s[0]&&s.splice(0,1),s.length?(t=MVC.Utils.isObject(t)?Object.entries(t):t,s.reduce((e,t,s,i)=>{var r=[];for(var[n,a]of(t=MVC.Utils.objectQuery.parseFragment(t),e))n.match(t)&&(r=s===i.length-1?r.concat([[n,a]]):r.concat(Object.entries(a)));return e=r},t)):t},MVC.Utils.objectQuery.parseNotation=function(e){return e="["===e.charAt(0)&&"]"==e.charAt(e.length-1)?e.slice(1,-1).split("]["):e.split(".")},MVC.Utils.objectQuery.parseFragment=function(e){return"/"===e.charAt(0)&&"/"==e.charAt(e.length-1)&&(e=e.slice(1,-1),e=new RegExp("^".concat(e,"$"))),e},MVC.Utils.paramsToObject=function(e){e=e.split("&");var t={};return e.forEach(e=>{e=e.split("="),t[e[0]]=decodeURIComponent(e[1]||"")}),JSON.parse(JSON.stringify(t))},MVC.Utils.toggleEventsForTargetObjects=function(e,t,s,i){Object.entries(t).forEach(t=>{var[r,n]=t,a=r.split(" "),l=a[0],h=a[1],o=MVC.Utils.objectQuery(l,s);for(var[c,u]of o=MVC.Utils.isArray(o)?o:[["@",o]]){var b="on"===e?"on":"off",v=MVC.Utils.objectQuery(n,i)[0][1];u[b](h,v)}})},MVC.Utils.toggleEventsForTargetViewObjects=function(e,t,s,i){Object.entries(t).forEach((t,r)=>{var n=t.split(" "),a=n[0],l=n[1],h=MVC.Utils.objectQuery(a,s);for(var[o,c]of h=MVC.Utils.isArray(h)?h:[["@",h]]){var u="on"===e?"addEventListener":"removeEventListener",b=MVC.Utils.objectQuery(r,i)[0][1];if(c instanceof NodeList)for(var v of c)v[u](l,b);else HTMLElement,c[u](l,b)}})},MVC.Events=class{constructor(){}get _events(){return this.events=this.events||{},this.events}getEventCallbacks(e){return this._events[e]||{}}getEventCallbackName(e){return e.name.length?e.name:"anonymousFunction"}getEventCallbackGroup(e,t){return e[t]||[]}on(e,t){var s=this.getEventCallbacks(e),i=this.getEventCallbackName(t),r=this.getEventCallbackGroup(s,i);return r.push(t),s[i]=r,this._events[e]=s,this}off(){switch(arguments.length){case 0:delete this.events;break;case 1:var e=arguments[0];delete this._events[e];break;case 2:e=arguments[0];var t=arguments[1],s="string"==typeof t?t:this.getEventCallbackName(t);this._events[e]&&(delete this._events[e][s],0===Object.keys(this._events[e]).length&&delete this._events[e])}return this}emit(e,t){var s=Object.values(arguments),i=Object.entries(this.getEventCallbacks(e));for(var[r,n]of i)for(var a of n){a(t,...s.splice(2)||[])}return this}},MVC.Channels=class{constructor(){}get _channels(){return this.channels=this.channels||{},this.channels}channel(e){return this._channels[e]=this._channels[e]?this._channels[e]:new MVC.Channels.Channel,this._channels[e]}off(e){delete this._channels[e]}},MVC.Channels.Channel=class{constructor(){}get _responses(){return this.responses=this.responses||this.responses,this.responses}response(e,t){if(!t)return this._responses[response];this._responses[e]=t}request(e){if(this._responses[e]){var t=Array.prototype.slice.call(arguments).slice(1);return this._responses[e](...t)}}off(e){if(e)delete this._responses[e];else for(var[t]of Object.keys(this._responses))delete this._responses[t]}},MVC.Base=class extends MVC.Events{constructor(e,t){super(),t&&(this._configuration=t),e&&(this._settings=e)}get uid(){return this._uid=this._uid?this._uid:MVC.Utils.UID(),this._uid}get _name(){return this.name}set _name(e){this.name=e}get _configuration(){return this.configuration=this.configuration?this.configuration:{},this.configuration}set _configuration(e){this.configuration=e}get _settings(){return this.settings=this.settings?this.settings:{},this.settings}set _settings(e){this.settings=MVC.Utils.addPropertiesToObject(e,this._settings)}setProperties(e,t,s){s=s||{};var i=Object.keys(e).length,r=0;return t.some(t=>(void 0!==e[t]&&(r+=1,s[t]?s[t](e[t]):this["_".concat(t)]=e[t]),r===i)),this}deleteProperties(e,t,s){s=s||{};var i=Object.keys(e).length,r=0;return t.some(t=>(void 0!==e[t]&&(r+=1,s[t]?s[t](e[t]):delete this[t]),r===i)),this}},MVC.Service=class extends MVC.Base{constructor(){return super(...arguments),this}get _defaults(){return this.defaults||{contentType:{"Content-Type":"application/json"},responseType:"json"}}get _responseTypes(){return["","arraybuffer","blob","document","json","text"]}get _responseType(){return this.responseType}set _responseType(e){this._xhr.responseType=this._responseTypes.find(t=>t===e)||this._defaults.responseType}get _type(){return this.type}set _type(e){this.type=e}get _url(){return this.url}set _url(e){this.url=e}get _headers(){return this.headers||[]}set _headers(e){this._headers.length=0,e.forEach(e=>{this._headers.push(e),e=Object.entries(e)[0],this._xhr.setRequestHeader(e[0],e[1])})}get _data(){return this.data}set _data(e){this.data=e}get _xhr(){return this.xhr=this.xhr?this.xhr:new XMLHttpRequest,this.xhr}get _enabled(){return this.enabled||!1}set _enabled(e){this.enabled=e}request(e){return e=e||this.data||null,new Promise((t,s)=>{200===this._xhr.status&&this._xhr.abort(),this._xhr.open(this.type,this.url),this._headers=this.settings.headers||[this._defaults.contentType],this._xhr.onload=t,this._xhr.onerror=s,this._xhr.send(e)}).then(e=>(this.emit("xhr:resolve",{name:"xhr:resolve",data:e.currentTarget},this),e)).catch(e=>{throw e})}enable(){var e=this.settings;return!this.enabled&&Object.keys(e).length&&(e.type&&(this._type=e.type),e.url&&(this._url=e.url),e.data&&(this._data=e.data||null),this.settings.responseType&&(this._responseType=this._settings.responseType),this._enabled=!0),this}disable(){var e=this.settings;return this.enabled&&Object.keys(e).length&&(delete this._type,delete this._url,delete this._data,delete this._headers,delete this._responseType,this._enabled=!1),this}},MVC.Model=class extends MVC.Base{constructor(){return super(...arguments),this}get keyMap(){return["name","schema","localStorage","histiogram","services","serviceCallbacks","serviceEvents","data","dataCallbacks","dataEvents","defaults"]}get _schema(){return this._schema}set _schema(e){this.schema=e}get _isSetting(){return this.isSetting}set _isSetting(e){this.isSetting=e}get _changing(){return this.changing=this.changing||{},this.changing}get _localStorage(){return this.localStorage}set _localStorage(e){this.localStorage=e}get _defaults(){return this.defaults}set _defaults(e){this.defaults=e}get _histiogram(){return this.histiogram||{length:1}}set _histiogram(e){this.histiogram=Object.assign(this._histiogram,e)}get _history(){return this.history=this.history||[],this.history}set _history(e){Object.keys(e).length&&this._histiogram.length&&(this._history.unshift(this.parse(e)),this._history.splice(this._histiogram.length))}get _db(){var e=localStorage.getItem(this.localStorage.endpoint);return this.db=e||"{}",JSON.parse(this.db)}set _db(e){e=JSON.stringify(e),localStorage.setItem(this.localStorage.endpoint,e)}get _data(){return this.data=this.data||{},this.data}get _dataEvents(){return this.dataEvents=this.dataEvents||{},this.dataEvents}set _dataEvents(e){this.dataEvents=MVC.Utils.addPropertiesToObject(e,this._dataEvents)}get _dataCallbacks(){return this.dataCallbacks=this.dataCallbacks||{},this.dataCallbacks}set _dataCallbacks(e){this.dataCallbacks=MVC.Utils.addPropertiesToObject(e,this._dataCallbacks)}get _services(){return this.services=this.services||{},this.services}set _services(e){this.services=MVC.Utils.addPropertiesToObject(e,this._services)}get _serviceEvents(){return this.serviceEvents=this.serviceEvents||{},this.serviceEvents}set _serviceEvents(e){this.serviceEvents=MVC.Utils.addPropertiesToObject(e,this._serviceEvents)}get _serviceCallbacks(){return this.serviceCallbacks=this.serviceCallbacks||{},this.serviceCallbacks}set _serviceCallbacks(e){this.serviceCallbacks=MVC.Utils.addPropertiesToObject(e,this._serviceCallbacks)}get _enabled(){return this.enabled||!1}set _enabled(e){this.enabled=e}get(){switch(arguments.length){case 0:return this._data;case 1:var e=arguments[0];return this._data[e]}}set(){switch(this._history=this.parse(),arguments.length){case 1:this._isSetting=!0;var e=Object.entries(arguments[0]);e.forEach((t,s)=>{var[i,r]=t;s===e.length-1&&(this._isSetting=!1),this.setDataProperty(i,r)});break;case 2:var t=arguments[0],s=arguments[1];this.setDataProperty(t,s)}return this}unset(){switch(this._history=this.parse(),arguments.length){case 0:for(var e of Object.keys(this._data))this.unsetDataProperty(e);break;case 1:var t=arguments[0];this.unsetDataProperty(t)}return this}setDB(){var e=this._db;switch(arguments.length){case 1:Object.entries(arguments[0]).forEach(t=>{var[s,i]=t;e[s]=i});break;case 2:var t=arguments[0],s=arguments[1];e[t]=s}return this._db=e,this}unsetDB(){switch(arguments.length){case 0:delete this._db;break;case 1:var e=this._db;delete e[arguments[0]],this._db=e}return this}setDataProperty(e,t){if(!this._data["_".concat(e)]){var s=this;Object.defineProperties(this._data,{["_".concat(e)]:{configurable:!0,get(){return this[e]},set(t){var i=s._settings.schema;i&&i[e]?(this[e]=t,s._changing[e]=t,this.localStorage&&s.setDB(e,t)):i||(this[e]=t,s._changing[e]=t,this.localStorage&&s.setDB(e,t));var r=["set",":",e].join("");s.emit(r,{name:r,data:{key:e,value:t}},s),s._isSetting||(Object.values(s._changing).length?s.emit("set",{name:"set",data:Object.assign({},s._changing,s._data)},s):s.emit("set",{name:"set",data:s._data},s),delete s.changing)}}})}return this._data["_".concat(e)]=t,this}unsetDataProperty(e){var t=["unset",":",e].join(""),s=this._data[e];return delete this._data["_".concat(e)],delete this._data[e],this.emit(t,{name:t,data:{key:e,value:s}},this),this.emit("unset",{name:"unset",data:{key:e,value:s}},this),this}setDefaults(){var e={};this.defaults&&Object.assign(e,this.defaults),this.localStorage&&Object.assign(e,this._db),Object.keys(e)&&this.set(e)}resetServiceEvents(){return this.disableServiceEvents().enableServiceEvents()}enableServiceEvents(){this.services&&this.serviceEvents&&this.serviceCallbacks&&MVC.Utils.bindEventsToTargetObjects(this.serviceEvents,this.services,this.serviceCallbacks)}disableServiceEvents(){this.services&&this.serviceEvents&&this.serviceCallbacks&&MVC.Utils.unbindEventsFromTargetObjects(this.serviceEvents,this.services,this.serviceCallbacks)}resetDataEvents(){return this.disableDataEvents().enableDataEvents()}enableDataEvents(){this.dataEvents&&this.dataCallbacks&&MVC.Utils.bindEventsToTargetObjects(this.dataEvents,this,this.dataCallbacks)}disableDataEvents(){this.dataEvents&&this.dataCallbacks,MVC.Utils.unbindEventsFromTargetObjects(this.dataEvents,this,this.dataCallbacks)}enable(){var e=this.settings;return this.enabled||(this.setProperties(e||{},this.keyMap,{data:function(e){this.set(e)}.bind(this)}),this.enableServiceEvents(),this.enableDataEvents(),this._enabled=!0),this}disable(){var e=this.settings;return this.enabled&&(this.disableServiceEvents(),this.disableDataEvents(),this.deleteProperties(e||{},this.keyMap),this._enabled=!1),this}parse(e){return e=e||this._data||{},JSON.parse(JSON.stringify(e))}},MVC.View=class extends MVC.Base{constructor(){return super(...arguments),this}get elementKeyMap(){return["elementName","element","attributes","templates","insert"]}get uiKeyMap(){return["ui","uiCallbacks","uiEvents"]}get _elementName(){return this._element.tagName}set _elementName(e){this._element||(this._element=document.createElement(e))}get _element(){return this.element}set _element(e){e instanceof HTMLElement||e instanceof Document?this.element=e:"string"==typeof e&&(this.element=document.querySelector(e)),this.elementObserver.observe(this.element,{subtree:!0,childList:!0})}get _attributes(){return this._element.attributes}set _attributes(e){for(var[t,s]of Object.entries(e))void 0===s?this._element.removeAttribute(t):this._element.setAttribute(t,s)}get ui(){return this._ui}get _ui(){var e={};return e[":scope"]=this.element,Object.entries(this.uiElements).forEach(t=>{var[s,i]=t;if("string"==typeof i){var r=new RegExp(/^(\:scope(\W){0,}>{0,})/);i=i.replace(r,""),e[s]=this.element.querySelectorAll(i)}else(i instanceof HTMLElement||i instanceof Document)&&(e[s]=i)}),e}set _ui(e){this.uiElements=e}get _uiEvents(){return this.uiEvents}set _uiEvents(e){this.uiEvents=e}get _uiCallbacks(){return this.uiCallbacks=this.uiCallbacks||{},this.uiCallbacks}set _uiCallbacks(e){this.uiCallbacks=MVC.Utils.addPropertiesToObject(e,this._uiCallbacks)}get _observerCallbacks(){return this.observerCallbacks=this.observerCallbacks||{},this.observerCallbacks}set _observerCallbacks(e){this.observerCallbacks=MVC.Utils.addPropertiesToObject(e,this._observerCallbacks)}get elementObserver(){return this._elementObserver=this._elementObserver||new MutationObserver(this.elementObserve.bind(this)),this._elementObserver}get _insert(){return this.insert}set _insert(e){this.insert=e}get _enabled(){return this.enabled||!1}set _enabled(e){this.enabled=e}get _templates(){return this.templates=this.templates||{},this.templates}set _templates(e){this.templates=MVC.Utils.addPropertiesToObject(e,this._templates)}elementObserve(e,t){for(var[s,i]of Object.entries(e))switch(i.type){case"childList":for(var r of["addedNodes","removedNodes"])i[r].length&&this.resetUI()}}autoInsert(){var e;this.insert&&((e="string"===MVC.Utils.typeOf(this.insert.element)?document.querySelectorAll(this.insert.element):this.insert.element)instanceof HTMLElement||e instanceof Node?e.insertAdjacentElement(this.insert.method,this.element):e instanceof NodeList&&e.forEach(e=>{e.insertAdjacentElement(this.insert.method,this.element)}));return this}autoRemove(){return this.element&&this.element.parentElement&&this.element.parentElement.removeChild(this.element),this}enableElement(){return this.setProperties(this.settings||{},this.elementKeyMap)}disableElement(){return this.deleteProperties(this.settings||{},this.elementKeyMap)}resetUI(){return this.disableUI().enableUI()}enableUI(){return this.setProperties(this.settings||{},this.uiKeyMap).enableUIEvents()}disableUI(){return this.disableUIEvents().deleteProperties(this.settings||{},this.uiKeyMap)}enableUIEvents(){return this.uiEvents&&this.ui&&this.uiCallbacks&&MVC.Utils.bindEventsToTargetViewObjects(this.uiEvents,this.ui,this.uiCallbacks),this}enableRenderers(){var e=this.settings||{};return MVC.Utils.objectQuery("[/^render.*?/]",e).forEach(e=>{var[t,s]=e;this[t]=s}),this}disableRenderers(){var e=this.settings||{};return MVC.Utils.objectQuery("[/^render.*?/]",e).forEach((e,t)=>{delete this[e]}),this}disableUIEvents(){return this.uiEvents&&this.ui&&this.uiCallbacks&&MVC.Utils.unbindEventsFromTargetViewObjects(this.uiEvents,this.ui,this.uiCallbacks),this}enable(){this.settings;return this._enabled||(this.enableRenderers().enableElement().enableUI()._enabled=!0),this}disable(){return this._enabled&&(this.disableRenderers().disableUI().disableElement()._enabled=!1),this}},MVC.Controller=class extends MVC.Base{constructor(){super(...arguments)}get keyMap(){return["modelCallbacks","viewCallbacks","controllerCallbacks","routerCallbacks","models","views","controllers","routers","modelEvents","viewEvents","controllerEvents","routerEvents"]}get _modelCallbacks(){return this.modelCallbacks=this.modelCallbacks||{},this.modelCallbacks}set _modelCallbacks(e){this.modelCallbacks=MVC.Utils.addPropertiesToObject(e,this._modelCallbacks)}get _viewCallbacks(){return this.viewCallbacks=this.viewCallbacks||{},this.viewCallbacks}set _viewCallbacks(e){this.viewCallbacks=MVC.Utils.addPropertiesToObject(e,this._viewCallbacks)}get _controllerCallbacks(){return this.controllerCallbacks=this.controllerCallbacks||{},this.controllerCallbacks}set _controllerCallbacks(e){this.controllerCallbacks=MVC.Utils.addPropertiesToObject(e,this._controllerCallbacks)}get _models(){return this.models=this.models||{},this.models}set _models(e){this.models=MVC.Utils.addPropertiesToObject(e,this._models)}get _views(){return this.views=this.views||{},this.views}set _views(e){this.views=MVC.Utils.addPropertiesToObject(e,this._views)}get _controllers(){return this.controllers=this.controllers||{},this.controllers}set _controllers(e){this.controllers=MVC.Utils.addPropertiesToObject(e,this._controllers)}get _routers(){return this.routers=this.routers||{},this.routers}set _routers(e){this.routers=MVC.Utils.addPropertiesToObject(e,this._routers)}get _routerEvents(){return this.routerEvents=this.routerEvents||{},this.routerEvents}set _routerEvents(e){this.routerEvents=MVC.Utils.addPropertiesToObject(e,this._routerEvents)}get _routerCallbacks(){return this.routerCallbacks=this.routerCallbacks||{},this.routerCallbacks}set _routerCallbacks(e){this.routerCallbacks=MVC.Utils.addPropertiesToObject(e,this._routerCallbacks)}get _modelEvents(){return this.modelEvents=this.modelEvents||{},this.modelEvents}set _modelEvents(e){this.modelEvents=MVC.Utils.addPropertiesToObject(e,this._modelEvents)}get _viewEvents(){return this.viewEvents=this.viewEvents||{},this.viewEvents}set _viewEvents(e){this.viewEvents=MVC.Utils.addPropertiesToObject(e,this._viewEvents)}get _controllerEvents(){return this.controllerEvents=this.controllerEvents||{},this.controllerEvents}set _controllerEvents(e){this.controllerEvents=MVC.Utils.addPropertiesToObject(e,this._controllerEvents)}get _enabled(){return this.enabled||!1}set _enabled(e){this.enabled=e}resetModelEvents(){return this.disableModelEvents().enableModelEvents()}enableModelEvents(){return this.modelEvents&&this.models&&this.modelCallbacks&&MVC.Utils.bindEventsToTargetObjects(this.modelEvents,this.models,this.modelCallbacks),this}disableModelEvents(){return this.modelEvents&&this.models&&this.modelCallbacks&&MVC.Utils.unbindEventsFromTargetObjects(this.modelEvents,this.models,this.modelCallbacks),this}resetViewEvents(){return this.disableViewEvents().enableViewEvents()}enableViewEvents(){return this.viewEvents&&this.views&&this.viewCallbacks&&MVC.Utils.bindEventsToTargetObjects(this.viewEvents,this.views,this.viewCallbacks),this}disableViewEvents(){return this.viewEvents&&this.views&&this.viewCallbacks&&MVC.Utils.unbindEventsFromTargetObjects(this.viewEvents,this.views,this.viewCallbacks),this}resetControllerEvents(){return this.disableControllerEvents().enableControllerEvents()}enableControllerEvents(){return this.controllerEvents&&this.controllers&&this.controllerCallbacks&&MVC.Utils.bindEventsToTargetObjects(this.controllerEvents,this.controllers,this.controllerCallbacks),this}disableControllerEvents(){return this.controllerEvents&&this.controllers&&this.controllerCallbacks&&MVC.Utils.unbindEventsFromTargetObjects(this.controllerEvents,this.controllers,this.controllerCallbacks),this}resetRouterEvents(){return this.disableRouterEvents().enableRouterEvents()}enableRouterEvents(){return this.routerEvents&&this.routers&&this.routerCallbacks&&MVC.Utils.bindEventsToTargetObjects(this.routerEvents,this.routers,this.routerCallbacks),this}disableRouterEvents(){return this.routerEvents&&this.routers&&this.routerCallbacks&&MVC.Utils.unbindEventsFromTargetObjects(this.routerEvents,this.routers,this.routerCallbacks),this}enable(){var e=this.settings||{};return this.enabled||(this.setProperties(e||{},this.keyMap),this.enableModelEvents(),this.enableViewEvents(),this.enableControllerEvents(),this.enableRouterEvents(),this._enabled=!0),this}reset(){return this.disable(),this.enable(),this}disable(){var e=this.settings;return this.enabled&&(this.disableModelEvents(),this.disableViewEvents(),this.disableControllerEvents(),this.disableRouterEvents(),this.deleteProperties(e||{},this.keyMap),this._enabled=!1),this}},MVC.Router=class extends MVC.Base{constructor(){return super(...arguments),this}get protocol(){return window.location.protocol}get hostname(){return window.location.hostname}get port(){return window.location.port}get path(){return window.location.pathname}get hash(){var e=window.location.href,t=e.indexOf("#");if(t>-1){var s,i=e.indexOf("?"),r=t+1;return s=i>-1?t>i?e.length:i:e.length,(e=e.slice(r,s)).length?e:null}return null}get params(){var e=window.location.href,t=e.indexOf("?");if(t>-1){var s,i=e.indexOf("#"),r=t+1;return s=i>-1?t>i?e.length:i:e.length,(e=e.slice(r,s)).length?e:null}return null}get _routeData(){var e={location:{},controller:{}},t=this.path.split("/").filter(e=>e.length);t=t.length?t:["/"];var s=this.hash,i=s?s.split("/").filter(e=>e.length):null,r=this.params,n=r?MVC.Utils.paramsToObject(r):null;this.protocol&&(e.location.protocol=this.protocol),this.hostname&&(e.location.hostname=this.hostname),this.port&&(e.location.port=this.port),this.path&&(e.location.path=this.path),s&&i&&(i=i.length?i:["/"],e.location.hash={path:s,fragments:i}),r&&n&&(e.location.params={path:r,data:n}),e.location.path={name:this.path,fragments:t},e.location.currentURL=this.currentURL;var a=this._routeControllerData;return e.location=Object.assign(e.location,a.location),e.controller=a.controller,this.routeData=e,this.routeData}get _routeControllerData(){var e={location:{}};return Object.entries(this.routes).forEach(t=>{var[s,i]=t,r=this.path.split("/").filter(e=>e.length);r=r.length?r:["/"];var n,a=s.split("/").filter((e,t)=>e.length);if(a=a.length?a:["/"],r.length&&r.length===a.length)return a.filter((t,l)=>{if(void 0===n||!0===n){if(":"===t[0]){var h=t.replace(":","");l===r.length-1&&(e.location.currentIDKey=h),e.location[h]=r[l],t=this.fragmentIDRegExp}else t=t.replace(new RegExp("/","gi"),"\\/"),t=this.routeFragmentNameRegExp(t);if(!0===(n=t.test(r[l]))&&l===r.length-1)return e.location.route={name:s,fragments:a},e.controller=i,i}})[0]}),e}get _enabled(){return this.enabled||!1}set _enabled(e){this.enabled=e}get _routes(){return this.routes=this.routes||{},this.routes}set _routes(e){this.routes=MVC.Utils.addPropertiesToObject(e,this._routes)}get _controller(){return this.controller}set _controller(e){this.controller=e}get _previousURL(){return this.previousURL}set _previousURL(e){this.previousURL=e}get _currentURL(){return this.currentURL}set _currentURL(e){this.currentURL&&(this._previousURL=this.currentURL),this.currentURL=e}get fragmentIDRegExp(){return new RegExp(/^([0-9A-Z\?\=\,\.\*\-\_\'\"\^\%\$\#\@\!\~\(\)\{\}\&\<\>\\\/])*$/,"gi")}routeFragmentNameRegExp(e){return new RegExp("^".concat(e,"$"))}enable(){return this.enabled||(this.enableEvents(),this.enableRoutes(),this._enabled=!0),this}disable(){return this.enabled&&(this.disableEvents(),this.disableRoutes(),this._enabled=!1),this}enableRoutes(){return this.settings.controller&&(this._controller=this.settings.controller),this._routes=Object.entries(this.settings.routes).reduce((e,t,s,i)=>{var[r,n]=t;return e[r]=Object.assign(n,{callback:this.controller[n.callback].bind(this.controller)}),e},{}),this}disableRoutes(){return delete this._routes,delete this._controller,this}enableEvents(){return window.addEventListener("hashchange",this.routeChange.bind(this)),this}disableEvents(){return window.removeEventListener("hashchange",this.routeChange.bind(this)),this}routeChange(){this._currentURL=window.location.href;var e=this._routeData;return e.controller&&(this.previousURL&&(e.previousURL=this.previousURL),this.emit("navigate",e),e.controller.callback(e)),this}navigate(e){window.location.href=e}};
//# sourceMappingURL=data:application/json;charset=utf-8;base64,