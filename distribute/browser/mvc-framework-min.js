var MVC=MVC||{};MVC.Constants={},MVC.CONST=MVC.Constants,MVC.Constants.Events={},MVC.CONST.EV=MVC.Constants.Events,MVC.Constants.Operators={},MVC.CONST.Operators={},MVC.CONST.Operators.Comparison={EQ:"EQ",STEQ:"STEQ",NOEQ:"NOEQ",STNOEQ:"STNOEQ",GT:"GT",LT:"LT",GTE:"GTE",LTE:"LTE"},MVC.CONST.Operators.Statement={AND:"AND",OR:"OR"},console.log(MVC.CONST),MVC.Utils={},MVC.Utils.isArray=function(t){return Array.isArray(t)},MVC.Utils.isObject=function(t){return!Array.isArray(t)&&null!==t&&"object"==typeof t},MVC.Utils.typeOf=function(t){return"object"==typeof valueA?MVC.Utils.isObject(valueA)?"object":MVC.Utils.isArray(valueA)?"array":null===valueA?"null":void 0:typeof t},MVC.Utils.isHTMLElement=function(t){return t instanceof HTMLElement},MVC.Utils.typeOf=function(t){switch(typeof t){case"object":return MVC.Utils.isArray(t)?"array":MVC.Utils.isObject(t)?"object":null===t?"null":void 0;case"string":case"number":case"boolean":case"undefined":case"function":return typeof t}},MVC.Utils.addPropertiesToObject=function(){var t;switch(arguments.length){case 2:var e=arguments[0];for(var[s,i]of(t=arguments[1],Object.entries(e)))t[s]=i;break;case 3:var r=arguments[0],a=arguments[1];(t=arguments[2])[r]=a}return t},MVC.Utils.objectQuery=function(t,e){var s=MVC.Utils.objectQuery.parseNotation(t);return"@"===s[0]&&s.splice(0,1),s.length?(e=MVC.Utils.isObject(e)?Object.entries(e):e,s.reduce((t,e,s,i)=>{var r=[];for(var[a,n]of(e=MVC.Utils.objectQuery.parseFragment(e),t))a.match(e)&&(r=s===i.length-1?r.concat([[a,n]]):r.concat(Object.entries(n)));return t=r},e)):e},MVC.Utils.objectQuery.parseNotation=function(t){return t="["===t.charAt(0)&&"]"==t.charAt(t.length-1)?t.slice(1,-1).split("]["):t.split(".")},MVC.Utils.objectQuery.parseFragment=function(t){return"/"===t.charAt(0)&&"/"==t.charAt(t.length-1)&&(t=t.slice(1,-1),t=new RegExp("^".concat(t,"$"))),t},MVC.Utils.paramsToObject=function(t){t=t.split("&");var e={};return t.forEach(t=>{t=t.split("="),e[t[0]]=decodeURIComponent(t[1]||"")}),JSON.parse(JSON.stringify(e))},MVC.Utils.toggleEventsForTargetObjects=function(t,e,s,i){for(var[r,a]of Object.entries(e)){var n=r.split(" "),l=n[0],h=n[1],o=MVC.Utils.objectQuery(l,s);for(var[c,d]of o=MVC.Utils.isArray(o)?o:[["@",o]]){var u="on"===t?d instanceof NodeList||d instanceof HTMLElement||d instanceof Document?"addEventListener":"on":d instanceof NodeList||d instanceof HTMLElement||d instanceof Document?"removeEventListener":"off",v=MVC.Utils.objectQuery(a,i)[0][1];if(d instanceof NodeList)for(var b of d)b[u](h,v);else HTMLElement,d[u](h,v)}}},MVC.Utils.bindEventsToTargetObjects=function(){this.toggleEventsForTargetObjects("on",...arguments)},MVC.Utils.unbindEventsFromTargetObjects=function(){this.toggleEventsForTargetObjects("off",...arguments)},MVC.Events=class{constructor(){}get _events(){return this.events=this.events?this.events:{},this.events}getEventCallbacks(t){return this._events[t]||{}}getEventCallbackName(t){return t.name.length?t.name:"anonymousFunction"}getEventCallbackGroup(t,e){return t[e]||[]}on(t,e){var s=this.getEventCallbacks(t),i=this.getEventCallbackName(e),r=this.getEventCallbackGroup(s,i);return r.push(e),s[i]=r,this._events[t]=s,this}off(){switch(arguments.length){case 0:delete this._events;break;case 1:var t=arguments[0];delete this._events[t];break;case 2:t=arguments[0];var e=arguments[1],s="string"==typeof e?e:this.getEventCallbackName(e);delete this._events[t][s],0===Object.keys(this._events[t]).length&&delete this._events[t]}return this}emit(t,e){var s=Object.values(arguments),i=Object.entries(this.getEventCallbacks(t));for(var[r,a]of i)for(var n of a){n(e,...s.splice(2)||[])}return this}},MVC.Channels=class{constructor(){}get _channels(){return this.channels=this.channels?this.channels:{},this.channels}channel(t){return this._channels[t]=this._channels[t]?this._channels[t]:new MVC.Channels.Channel,this._channels[t]}off(t){delete this._channels[t]}},MVC.Channels.Channel=class{constructor(){}get _responses(){return this.responses=this.responses?this.responses:{},this.responses}response(t,e){if(!e)return this._responses[response];this._responses[t]=e}request(t,e){if(this._responses[t])return this._responses[t](e)}off(t){if(t)delete this._responses[t];else for(var[e]of Object.keys(this._responses))delete this._responses[e]}},MVC.Base=class extends MVC.Events{constructor(t,e){super(),e&&(this._configuration=e),t&&(this._settings=t)}get _configuration(){return this.configuration=this.configuration?this.configuration:{},this.configuration}set _configuration(t){this.configuration=t}get _settings(){return this.settings=this.settings?this.settings:{},this.settings}set _settings(t){this.settings=MVC.Utils.addPropertiesToObject(t,this._settings)}get _mediators(){return this.mediators=this.mediators?this.mediators:{},this.mediators}set _mediators(t){this.mediators=MVC.Utils.addPropertiesToObject(t,this._mediators)}},MVC.Service=class extends MVC.Base{constructor(){super(...arguments)}get _defaults(){return this.defaults||{contentType:{"Content-Type":"application/json"},responseType:"json"}}get _responseTypes(){return["","arraybuffer","blob","document","json","text"]}get _responseType(){return this.responseType}set _responseType(t){this._xhr.responseType=this._responseTypes.find(e=>e===t)||this._defaults.responseType}get _type(){return this.type}set _type(t){this.type=t}get _url(){return this.url}set _url(t){this.url=t}get _headers(){return this.headers||[]}set _headers(t){this._headers.length=0,t.forEach(t=>{this._headers.push(t),t=Object.entries(t)[0],this._xhr.setRequestHeader(t[0],t[1])})}get _data(){return this.data}set _data(t){this.data=t}get _xhr(){return this.xhr=this.xhr?this.xhr:new XMLHttpRequest,this.xhr}get _enabled(){return this.enabled||!1}set _enabled(t){this.enabled=t}request(t){return t=t||this.data||null,new Promise((e,s)=>{200===this._xhr.status&&this._xhr.abort(),this._xhr.open(this.type,this.url),this._headers=this.settings.headers||[this._defaults.contentType],this._xhr.onload=e,this._xhr.onerror=s,this._xhr.send(t)}).then(t=>(this.emit("xhr:resolve",{name:"xhr:resolve",data:t.currentTarget},this),t)).catch(t=>{throw t})}enable(){var t=this.settings;return!this.enabled&&Object.keys(t).length&&(t.type&&(this._type=t.type),t.url&&(this._url=t.url),t.data&&(this._data=t.data||null),this.settings.responseType&&(this._responseType=this._settings.responseType),this._enabled=!0),this}disable(){var t=this.settings;return this.enabled&&Object.keys(t).length&&(delete this._type,delete this._url,delete this._data,delete this._headers,delete this._responseType,this._enabled=!1),this}},MVC.Validator=class{constructor(t){return this._schema=t,this}get _schema(){return this.schema}set _schema(t){this.schema=t}get _results(){return this.results}set _results(t){this.results=t}get _data(){return this.data}set _data(t){this.data=t}validate(t){this._data=t;var e={};return Object.entries(this._schema).forEach(s=>{var[i,r]=s,a={},n=t[i];if(a.key=i,a.value=n,r.required&&(a.required=this.required(n,r.required)),r.type&&(a.type=this.type(n,r.type)),r.evaluations){var l=this.evaluations(n,r.evaluations);a.evaluations=this.evaluationResults(l)}e[i]=a}),this._results=e,e}required(t,e){var s={},i=Object.assign({pass:"Value is defined.",fail:"Value is not defined."},e.messages);return t=void 0!==t,s.value=t,s.comparator=e,s.result=t===e,s.message=s.result?i.pass:i.fail,s}type(t,e){var s={},i=Object.assign({pass:"Valid type.",fail:"Invalid type."},e.messages),r=MVC.Utils.typeOf(t);return s.value=r,s.comparator=e,s.result=r===e,s.message=s.result?i.pass:i.fail,s}evaluations(t,e){var s={pass:"Valid.",fail:"Invalid."};return e.reduce((e,i,r)=>{if(MVC.Utils.isArray(i))e.push(...this.evaluations(t,i));else{i._value=t,i.messages=i.messages?i.messages:s;var a=this.compareValues(i._value,i.comparison.value,i.comparator,i.messages);i.results=i.results||{},i.results.value=a,e.push(i)}if(e.length>1){var n=e[r];if(n.comparison.statement){e[r-1];var l=n.results.statement?n.results.statement.result:n.results.value.result;n.messages=n.messages?n.messages:s;var h=this.compareStatements(l,n.comparison.statement,n.results.value.result,n.messages);n.results=n.results||{},n.results.statement=h}}return e},[])}evaluationResults(t){var e={pass:[],fail:[]};return t.forEach(t=>{delete t.messages,t.results.statement?!1===t.results.statement.result?e.fail.push(t):!0===t.results.statement.result&&e.pass.push(t):t.results.value&&(!1===t.results.value.result?e.fail.push(t):!0===t.results.value.result&&e.pass.push(t))}),e}compareValues(t,e,s,i){var r;switch(e){case MVC.CONST.Operators.Comparison.EQ:r=t==s;break;case MVC.CONST.Operators.Comparison.STEQ:r=t===s;break;case MVC.CONST.Operators.Comparison.NOEQ:r=t!=s;break;case MVC.CONST.Operators.Comparison.STNOEQ:r=t!==s;break;case MVC.CONST.Operators.Comparison.GT:r=t>s;break;case MVC.CONST.Operators.Comparison.LT:r=t<s;break;case MVC.CONST.Operators.Comparison.GTE:r=t>=s;break;case MVC.CONST.Operators.Comparison.LTE:r=t<=s}return{result:r,message:r?i.pass:i.fail}}compareStatements(t,e,s,i){var r;switch(e){case MVC.CONST.Operators.Statement.AND:r=t&&s;break;case MVC.CONST.Operators.Statement.OR:r=t||s}return{result:r,message:r?i.pass:i.fail}}},MVC.Model=class extends MVC.Base{constructor(){super(...arguments)}get _validator(){return this.validator}set _validator(t){this.validator=new MVC.Validator(t)}get _schema(){return this._schema}set _schema(t){this.schema=t}get _isSetting(){return this.isSetting}set _isSetting(t){this.isSetting=t}get _changing(){return this.changing=this.changing?this.changing:{},this.changing}get _localStorage(){return this.localStorage}set _localStorage(t){this.localStorage=t}get _defaults(){return this.defaults}set _defaults(t){this.defaults=t}get _histiogram(){return this.histiogram||{length:1}}set _histiogram(t){this.histiogram=Object.assign(this._histiogram,t)}get _history(){return this.history=this.history?this.history:[],this.history}set _history(t){Object.keys(t).length&&this._histiogram.length&&(this._history.unshift(this.parse(t)),this._history.splice(this._histiogram.length))}get _db(){var t=localStorage.getItem(this.localStorage.endpoint);return this.db=t||"{}",JSON.parse(this.db)}set _db(t){t=JSON.stringify(t),localStorage.setItem(this.localStorage.endpoint,t)}get _data(){return this.data=this.data?this.data:{},this.data}get _dataEvents(){return this.dataEvents=this.dataEvents?this.dataEvents:{},this.dataEvents}set _dataEvents(t){this.dataEvents=MVC.Utils.addPropertiesToObject(t,this._dataEvents)}get _dataCallbacks(){return this.dataCallbacks=this.dataCallbacks?this.dataCallbacks:{},this.dataCallbacks}set _dataCallbacks(t){this.dataCallbacks=MVC.Utils.addPropertiesToObject(t,this._dataCallbacks)}get _services(){return this.services=this.services?this.services:{},this.services}set _services(t){this.services=MVC.Utils.addPropertiesToObject(t,this._services)}get _serviceEvents(){return this.serviceEvents=this.serviceEvents?this.serviceEvents:{},this.serviceEvents}set _serviceEvents(t){this.serviceEvents=MVC.Utils.addPropertiesToObject(t,this._serviceEvents)}get _serviceCallbacks(){return this.serviceCallbacks=this.serviceCallbacks?this.serviceCallbacks:{},this.serviceCallbacks}set _serviceCallbacks(t){this.serviceCallbacks=MVC.Utils.addPropertiesToObject(t,this._serviceCallbacks)}get _enabled(){return this.enabled||!1}set _enabled(t){this.enabled=t}get(){switch(arguments.length){case 0:return this.data;case 1:var t=arguments[0];return this.data[t]}}set(){switch(this._history=this.parse(),arguments.length){case 1:this._isSetting=!0;var t=Object.entries(arguments[0]);t.forEach((e,s)=>{var[i,r]=e;s===t.length-1&&(this._isSetting=!1),this.setDataProperty(i,r)});break;case 2:var e=arguments[0],s=arguments[1];this.setDataProperty(e,s)}if(this.validator){var i=this.mediators.validate;this._validator.validate(JSON.parse(JSON.stringify(this.data))),i.set({data:this.validator.data,results:this.validator.results}),this.emit(i.name,i.emission(),this)}return this}unset(){switch(this._history=this.parse(),arguments.length){case 0:for(var t of Object.keys(this._data))this.unsetDataProperty(t);break;case 1:var e=arguments[0];this.unsetDataProperty(e)}return this}setDB(){var t=this._db;switch(arguments.length){case 1:Object.entries(arguments[0]).forEach(e=>{var[s,i]=e;t[s]=i});break;case 2:var e=arguments[0],s=arguments[1];t[e]=s}return this._db=t,this}unsetDB(){switch(arguments.length){case 0:delete this._db;break;case 1:var t=this._db;delete t[arguments[0]],this._db=t}return this}setDataProperty(t,e){if(!this._data["_".concat(t)]){var s=this;Object.defineProperties(this._data,{["_".concat(t)]:{configurable:!0,get(){return this[t]},set(e){new Boolean;var i=s._settings.schema;i&&i[t]?(this[t]=e,s._changing[t]=e,this.localStorage&&s.setDB(t,e)):i||(this[t]=e,s._changing[t]=e,this.localStorage&&s.setDB(t,e));var r=["set",":",t].join("");s.emit(r,{name:r,data:{key:t,value:e}},s),s._isSetting||(Object.values(s._changing).length?s.emit("set",{name:"set",data:s._changing},s):s.emit("set",{name:"set",data:{key:t,value:e}},s),delete s.changing)}}})}return this._data["_".concat(t)]=e,this}unsetDataProperty(t){var e=["unset",":",t].join(""),s=this._data[t];return delete this._data["_".concat(t)],delete this._data[t],this.emit(e,{name:e,data:{key:t,value:s}},this),this.emit("unset",{name:"unset",data:{key:t,value:s}},this),this}setDefaults(){var t={};this.defaults&&Object.assign(t,this.defaults),this.localStorage&&Object.assign(t,this._db),Object.keys(t)&&this.set(t)}enableServiceEvents(){MVC.Utils.bindEventsToTargetObjects(this.serviceEvents,this.services,this.serviceCallbacks)}disableServiceEvents(){MVC.Utils.unbindEventsFromTargetObjects(this.serviceEvents,this.services,this.serviceCallbacks)}enableDataEvents(){MVC.Utils.bindEventsToTargetObjects(this.dataEvents,this,this.dataCallbacks)}disableDataEvents(){MVC.Utils.unbindEventsFromTargetObjects(this.dataEvents,this,this.dataCallbacks)}enableMediators(){return Object.assign(this._mediators,this.settings.mediators,{validate:new MVC.Mediators.Validate}),this}disableMediators(){return delete this._mediators,this}enable(){return this.settings&&!this.enabled&&(this.enableMediators(),this.settings.schema&&(this._validator=this.settings.schema),this.settings.localStorage&&(this._localStorage=this.settings.localStorage),this.settings.histiogram&&(this._histiogram=this.settings.histiogram),this.settings.services&&(this._services=this.settings.services),this.settings.serviceCallbacks&&(this._serviceCallbacks=this.settings.serviceCallbacks),this.settings.serviceEvents&&(this._serviceEvents=this.settings.serviceEvents),this.settings.data&&this.set(this.settings.data),this.settings.dataCallbacks&&(this._dataCallbacks=this.settings.dataCallbacks),this.settings.dataEvents&&(this._dataEvents=this.settings.dataEvents),this.settings.defaults&&(this._defaults=this.settings.defaults),this.services&&this.serviceEvents&&this.serviceCallbacks&&this.enableServiceEvents(),this.dataEvents&&this.dataCallbacks&&this.enableDataEvents(),this._enabled=!0),this}disable(){return this.settings&&!this.enabled&&(this.services&&this.serviceEvents&&this.serviceCallbacks&&this.disableServiceEvents(),this.dataEvents&&this.dataCallbacks&&this.disableDataEvents(),delete this._localStorage,delete this._histiogram,delete this._services,delete this._serviceCallbacks,delete this._serviceEvents,delete this._data,delete this._dataCallbacks,delete this._dataEvents,delete this._schema,delete this._validator,this.disableMediators(),this._enabled=!1),this}parse(t){return t=t||this._data,JSON.parse(JSON.stringify(Object.assign({},t)))}},MVC.Mediator=class extends MVC.Model{constructor(){super(...arguments),this.settings&&this.settings.name&&(this._name=this.settings.name)}get _name(){return this.name}set _name(t){this.name=t}emission(){var t={name:this.name,data:this.data};return this.emit(this.name,t),t}},MVC.Mediators={},MVC.Mediators.Navigate=class extends MVC.Mediator{constructor(){super(...arguments),this.addSettings(),this.enable()}addSettings(){this._name="navigate",this._schema={oldURL:{type:"string"},newURL:{type:"string"},currentRoute:{type:"string"},currentController:{type:"string"}}}},MVC.Mediators.Validate=class extends MVC.Mediator{constructor(){super(...arguments),this.addSettings(),this.enable()}addSettings(){this._name="validate",this._schema={data:{type:"object"},results:{type:"object"}}}},MVC.View=class extends MVC.Base{constructor(){return super(...arguments),this}get _elementName(){return this._element.tagName}set _elementName(t){this._element||(this._element=document.createElement(t))}get _element(){return this.element}set _element(t){t instanceof HTMLElement||t instanceof Document?this.element=t:"string"==typeof t&&(this.element=document.querySelector(t)),this.elementObserver.observe(this.element,{subtree:!0,childList:!0})}get _attributes(){return this._element.attributes}set _attributes(t){for(var[e,s]of Object.entries(t))void 0===s?this._element.removeAttribute(e):this._element.setAttribute(e,s)}get _ui(){return this.ui=this.ui?this.ui:{},this.ui}set _ui(t){for(var[e,s]of(this._ui.$element||(this._ui.$element=this.element),Object.entries(t)))"string"==typeof s?this._ui[e]=this._element.querySelectorAll(s):(s instanceof HTMLElement||s instanceof Document)&&(this._ui[e]=s)}get _uiEvents(){return this.uiEvents}set _uiEvents(t){this.uiEvents=t}get _uiCallbacks(){return this.uiCallbacks=this.uiCallbacks?this.uiCallbacks:{},this.uiCallbacks}set _uiCallbacks(t){this.uiCallbacks=MVC.Utils.addPropertiesToObject(t,this._uiCallbacks)}get _observerCallbacks(){return this.observerCallbacks=this.observerCallbacks?this.observerCallbacks:{},this.observerCallbacks}set _observerCallbacks(t){this.observerCallbacks=MVC.Utils.addPropertiesToObject(t,this._observerCallbacks)}get elementObserver(){return this._elementObserver=this._elementObserver?this._elementObserver:new MutationObserver(this.elementObserve.bind(this)),this._elementObserver}get _insert(){return this.insert}set _insert(t){this.insert=t}get _enabled(){return this.enabled||!1}set _enabled(t){this.enabled=t}get _templates(){return this.templates=this.templates?this.templates:{},this.templates}set _templates(t){this.templates=MVC.Utils.addPropertiesToObject(t,this._templates)}elementObserve(t,e){for(var[s,i]of Object.entries(t))switch(i.type){case"childList":for(var r of["addedNodes","removedNodes"])i[r].length&&this.resetUI()}}autoInsert(){var t;this.insert&&((t="string"===MVC.Utils.typeOf(this.insert.element)?document.querySelectorAll(this.insert.element):this.insert.element)instanceof HTMLElement||t instanceof Node?t.insertAdjacentElement(this.insert.method,this.element):t instanceof NodeList&&t.forEach(t=>{t.insertAdjacentElement(this.insert.method,this.element)}));return this}autoRemove(){return this.element&&this.element.parentElement&&this.element.parentElement.removeChild(this.element),this}enableElement(t){return(t=t||this.settings).elementName&&(this._elementName=t.elementName),t.element&&(this._element=t.element),t.attributes&&(this._attributes=t.attributes),t.templates&&(this._templates=t.templates),t.insert&&(this._insert=t.insert),this}disableElement(t){return t=t||this.settings,this.element&&delete this.element,this.attributes&&delete this.attributes,this.templates&&delete this.templates,this.insert&&delete this.insert,this}resetUI(){return this.disableUI(),this.enableUI(),this}enableUI(t){return(t=t||this.settings).ui&&(this._ui=t.ui),t.uiCallbacks&&(this._uiCallbacks=t.uiCallbacks),t.uiEvents&&(this._uiEvents=t.uiEvents,this.enableUIEvents()),this}disableUI(t){return(t=t||this.settings).uiEvents&&(this.disableUIEvents(),delete this._uiEvents),delete this.uiEvents,delete this.ui,delete this.uiCallbacks,this}enableUIEvents(){return this.uiEvents&&this.ui&&this.uiCallbacks&&MVC.Utils.bindEventsToTargetObjects(this.uiEvents,this.ui,this.uiCallbacks),this}enableRenderers(){return MVC.Utils.objectQuery("[/^render.*?/]",this.settings).forEach(t=>{var[e,s]=t;this[e]=s}),this}disableRenderers(){return MVC.Utils.objectQuery("[/^render.*?/]",this.settings).forEach((t,e)=>{delete this[t]}),this}disableUIEvents(){return this.uiEvents&&this.ui&&this.uiCallbacks&&MVC.Utils.unbindEventsFromTargetObjects(this.uiEvents,this.ui,this.uiCallbacks),this}enableMediators(){return this.settings.mediators&&(this._mediators=this.settings.mediators),this}disableMediators(){return this._mediators&&delete this._mediators,this}enable(){var t=this.settings;return t&&!this._enabled&&(this.enableRenderers(),this.enableMediators(),this.enableElement(t),this.enableUI(t),this._enabled=!0),this}disable(){var t=this.settings;return t&&this._enabled&&(this.disableRenderers(),this.disableUI(t),this.disableElement(t),this.disableMediators(),this._enabled=!1),this}},MVC.Controller=class extends MVC.Base{constructor(){super(...arguments)}get _mediatorCallbacks(){return this.mediatorCallbacks=this.mediatorCallbacks?this.mediatorCallbacks:{},this.mediatorCallbacks}set _mediatorCallbacks(t){this.mediatorCallbacks=MVC.Utils.addPropertiesToObject(t,this._mediatorCallbacks)}get _modelCallbacks(){return this.modelCallbacks=this.modelCallbacks?this.modelCallbacks:{},this.modelCallbacks}set _modelCallbacks(t){this.modelCallbacks=MVC.Utils.addPropertiesToObject(t,this._modelCallbacks)}get _viewCallbacks(){return this.viewCallbacks=this.viewCallbacks?this.viewCallbacks:{},this.viewCallbacks}set _viewCallbacks(t){this.viewCallbacks=MVC.Utils.addPropertiesToObject(t,this._viewCallbacks)}get _controllerCallbacks(){return this.controllerCallbacks=this.controllerCallbacks?this.controllerCallbacks:{},this.controllerCallbacks}set _controllerCallbacks(t){this.controllerCallbacks=MVC.Utils.addPropertiesToObject(t,this._controllerCallbacks)}get _models(){return this.models=this.models?this.models:{},this.models}set _models(t){this.models=MVC.Utils.addPropertiesToObject(t,this._models)}get _views(){return this.views=this.views?this.views:{},this.views}set _views(t){this.views=MVC.Utils.addPropertiesToObject(t,this._views)}get _controllers(){return this.controllers=this.controllers?this.controllers:{},this.controllers}set _controllers(t){this.controllers=MVC.Utils.addPropertiesToObject(t,this._controllers)}get _routers(){return this.routers=this.routers?this.routers:{},this.routers}set _routers(t){this.routers=MVC.Utils.addPropertiesToObject(t,this._routers)}get _routerEvents(){return this.routerEvents=this.routerEvents?this.routerEvents:{},this.routerEvents}set _routerEvents(t){this.routerEvents=MVC.Utils.addPropertiesToObject(t,this._routerEvents)}get _routerCallbacks(){return this.routerCallbacks=this.routerCallbacks?this.routerCallbacks:{},this.routerCallbacks}set _routerCallbacks(t){this.routerCallbacks=MVC.Utils.addPropertiesToObject(t,this._routerCallbacks)}get _mediatorEvents(){return this.mediatorEvents=this.mediatorEvents?this.mediatorEvents:{},this.mediatorEvents}set _mediatorEvents(t){this.mediatorEvents=MVC.Utils.addPropertiesToObject(t,this._mediatorEvents)}get _modelEvents(){return this.modelEvents=this.modelEvents?this.modelEvents:{},this.modelEvents}set _modelEvents(t){this.modelEvents=MVC.Utils.addPropertiesToObject(t,this._modelEvents)}get _viewEvents(){return this.viewEvents=this.viewEvents?this.viewEvents:{},this.viewEvents}set _viewEvents(t){this.viewEvents=MVC.Utils.addPropertiesToObject(t,this._viewEvents)}get _controllerEvents(){return this.controllerEvents=this.controllerEvents?this.controllerEvents:{},this.controllerEvents}set _controllerEvents(t){this.controllerEvents=MVC.Utils.addPropertiesToObject(t,this._controllerEvents)}get _enabled(){return this.enabled||!1}set _enabled(t){this.enabled=t}enableModelEvents(){return MVC.Utils.bindEventsToTargetObjects(this.modelEvents,this.models,this.modelCallbacks),this}disableModelEvents(){return MVC.Utils.unbindEventsFromTargetObjects(this.modelEvents,this.models,this.modelCallbacks),this}enableViewEvents(){return MVC.Utils.bindEventsToTargetObjects(this.viewEvents,this.views,this.viewCallbacks),this}disableViewEvents(){return MVC.Utils.unbindEventsFromTargetObjects(this.viewEvents,this.views,this.viewCallbacks),this}enableControllerEvents(){return MVC.Utils.bindEventsToTargetObjects(this.controllerEvents,this.controllers,this.controllerCallbacks),this}disableControllerEvents(){return MVC.Utils.unbindEventsFromTargetObjects(this.controllerEvents,this.controllers,this.controllerCallbacks),this}enableMediatorEvents(){return MVC.Utils.bindEventsToTargetObjects(this.mediatorEvents,this.mediators,this.mediatorCallbacks),this}disableMediatorEvents(){return MVC.Utils.unbindEventsFromTargetObjects(this.mediatorEvents,this.mediators,this.mediatorCallbacks),this}enableRouterEvents(){return MVC.Utils.bindEventsToTargetObjects(this.routerEvents,this.routers,this.routerCallbacks),this}disableRouterEvents(){return MVC.Utils.unbindEventsFromTargetObjects(this.routerEvents,this.routers,this.routerCallbacks),this}enable(){var t=this.settings;return t&&!this.enabled&&(t.modelCallbacks&&(this._modelCallbacks=t.modelCallbacks),t.viewCallbacks&&(this._viewCallbacks=t.viewCallbacks),t.controllerCallbacks&&(this._controllerCallbacks=t.controllerCallbacks),t.mediatorCallbacks&&(this._mediatorCallbacks=t.mediatorCallbacks),t.routerCallbacks&&(this._routerCallbacks=t.routerCallbacks),t.models&&(this._models=t.models),t.views&&(this._views=t.views),t.controllers&&(this._controllers=t.controllers),t.mediators&&(this._mediators=t.mediators),t.routers&&(this._routers=t.routers),t.modelEvents&&(this._modelEvents=t.modelEvents),t.viewEvents&&(this._viewEvents=t.viewEvents),t.controllerEvents&&(this._controllerEvents=t.controllerEvents),t.mediatorEvents&&(this._mediatorEvents=t.mediatorEvents),t.routerEvents&&(this._routerEvents=t.routerEvents),this.modelEvents&&this.models&&this.modelCallbacks&&this.enableModelEvents(),this.viewEvents&&this.views&&this.viewCallbacks&&this.enableViewEvents(),this.controllerEvents&&this.controllers&&this.controllerCallbacks&&this.enableControllerEvents(),this.routerEvents&&this.routers&&this.routerCallbacks&&this.enableRouterEvents(),this.mediatorEvents&&this.mediators&&this.mediatorCallbacks&&this.enableMediatorEvents(),this._enabled=!0),this}reset(){return this.disable(),this.enable(),this}disable(){return this.settings&&this.enabled&&(this.modelEvents&&this.models&&this.modelCallbacks&&this.disableModelEvents(),this.viewEvents&&this.views&&this.viewCallbacks&&this.disableViewEvents(),this.controllerEvents&&this.controllers&&this.controllerCallbacks&&this.disableControllerEvents()),this.routerEvents&&this.routers&&this.routerCallbacks&&this.disableRouterEvents(),this.mediatorEvents&&this.mediators&&this.mediatorCallbacks&&(this.disableMediatorEvents(),delete this._modelCallbacks,delete this._viewCallbacks,delete this._controllerCallbacks,delete this._mediatorCallbacks,delete this._routerCallbacks,delete this._models,delete this._views,delete this._controllers,delete this._mediators,delete this._routers,delete this._routerEvents,delete this._modelEvents,delete this._viewEvents,delete this._controllerEvents,delete this._mediatorEvents,this._enabled=!1),this}},MVC.Router=class extends MVC.Base{constructor(){return super(...arguments),this}get protocol(){return window.location.protocol}get hostname(){return window.location.hostname}get port(){return window.location.port}get path(){return window.location.pathname}get hash(){var t=window.location.href,e=t.indexOf("#");if(e>-1){var s,i=t.indexOf("?"),r=e+1;return s=i>-1?e>i?t.length:i:t.length,(t=t.slice(r,s)).length?t:null}return null}get params(){var t=window.location.href,e=t.indexOf("?");if(e>-1){var s,i=t.indexOf("#"),r=e+1;return s=i>-1?e>i?t.length:i:t.length,(t=t.slice(r,s)).length?t:null}return null}get _routeData(){var t={location:{},controller:{}},e=this.path.split("/").filter(t=>t.length);e=e.length?e:["/"];var s=this.hash,i=s?s.split("/").filter(t=>t.length):null,r=this.params,a=r?MVC.Utils.paramsToObject(r):null;this.protocol&&(t.location.protocol=this.protocol),this.hostname&&(t.location.hostname=this.hostname),this.port&&(t.location.port=this.port),this.path&&(t.location.path=this.path),s&&i&&(i=i.length?i:["/"],t.location.hash={path:s,fragments:i}),r&&a&&(t.location.params={path:r,data:a}),t.location.path={name:this.path,fragments:e},t.location.currentURL=this.currentURL;var n=this._routeControllerData;return t.location=Object.assign(t.location,n.location),t.controller=n.controller,this.routeData=t,this.routeData}get _routeControllerData(){var t={location:{}};return Object.entries(this.routes).forEach(e=>{var[s,i]=e,r=this.path.split("/").filter(t=>t.length);r=r.length?r:["/"];var a,n=s.split("/").filter((t,e)=>t.length);if(n=n.length?n:["/"],r.length&&r.length===n.length)return n.filter((e,l)=>{if(void 0===a||!0===a){if(":"===e[0]){var h=e.replace(":","");l===r.length-1&&(t.location.currentIDKey=h),t.location[h]=r[l],e=this.fragmentIDRegExp}else e=e.replace(new RegExp("/","gi"),"\\/"),e=this.routeFragmentNameRegExp(e);if(!0===(a=e.test(r[l]))&&l===r.length-1)return t.location.route={name:s,fragments:n},t.controller=i,i}})[0]}),t}get _enabled(){return this.enabled||!1}set _enabled(t){this.enabled=t}get _routes(){return this.routes=this.routes?this.routes:{},this.routes}set _routes(t){this.routes=MVC.Utils.addPropertiesToObject(t,this._routes)}get _controller(){return this.controller}set _controller(t){this.controller=t}get _previousURL(){return this.previousURL}set _previousURL(t){this.previousURL=t}get _currentURL(){return this.currentURL}set _currentURL(t){this.currentURL&&(this._previousURL=this.currentURL),this.currentURL=t}get fragmentIDRegExp(){return new RegExp(/^([0-9A-Z\?\=\,\.\*\-\_\'\"\^\%\$\#\@\!\~\(\)\{\}\&\<\>\\\/])*$/,"gi")}routeFragmentNameRegExp(t){return new RegExp("^".concat(t,"$"))}enable(){return this.enabled||(this.enableMediators(),this.enableEvents(),this.enableRoutes(),this._enabled=!0),this}disable(){return this.enabled&&(this.disableEvents(),this.disableRoutes(),this.disableMediators(),this._enabled=!1),this}enableRoutes(){return this.settings.controller&&(this._controller=this.settings.controller),this._routes=Object.entries(this.settings.routes).reduce((t,e,s,i)=>{var[r,a]=e;return t[r]=Object.assign(a,{callback:this.controller[a.callback].bind(this.controller)}),t},{}),this}enableMediators(){return Object.assign(this._mediators,this.settings.mediators,{navigateMediator:new MVC.Mediators.Navigate}),this}disableMediators(){return delete this._mediators.navigateMediator,this}disableRoutes(){return delete this._routes,delete this._controller,this}enableEvents(){return window.addEventListener("hashchange",this.routeChange.bind(this)),this}disableEvents(){return window.removeEventListener("hashchange",this.routeChange.bind(this)),this}routeChange(){this._currentURL=window.location.href;var t=this._routeData;if(t.controller){var e=this.mediators.navigateMediator;this.previousURL&&(t.previousURL=this.previousURL),e.unset().set(t),this.emit(e.name,e.emission()),t.controller.callback(e.emission())}return this}navigate(t){window.location.href=t}};
//# sourceMappingURL=data:application/json;charset=utf8;base64,
